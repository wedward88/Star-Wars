{"version":3,"sources":["components/Header.jsx","components/Menu.jsx","components/MovieListItem.jsx","components/MovieList.jsx","App.js","index.js"],"names":["props","className","CharMenu","handleItemClick","url","charName","fetchMovies","toggleOpen","fetch","then","res","json","data","addMovies","this","chars","open","currChar","charPhotos","charDet","map","char","key","name","onClick","src","alt","id","React","Component","movie","show","date","Date","release_date","formattedDate","getDay","getMonth","getDate","getFullYear","moviePosters","Transition","timeout","in","exit","appear","status","title","episode_id","director","opening_crawl","movies","movieItemShow","movieList","MovieListItem","App","a","promises","films","film","Promise","all","setState","currMovies","state","dropDownOpen","characters","Header","Menu","MovieList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.777e4626.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (props) => {\n    return (\n        <header>\n            <div className=\"title\">\n                <h1 className=\"logo\">$</h1>\n                <div>\n                    <h2>Star</h2>\n                    <h2>Wars</h2>\n                </div>\n                <h1 className=\"logo\">*</h1>\n            </div>\n            <h2>character lookup:</h2>\n        </header>\n    )\n}","import React from 'react';\n\nclass CharMenu extends React.Component {\n\n\n    fetchMovies (url) {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                this.props.addMovies(data)\n            });       \n    }\n\n    handleItemClick = (url, charName) => {\n        this.fetchMovies(url);\n        this.props.toggleOpen(charName);\n    }\n\n\n    render () {\n        const { chars, open, toggleOpen, currChar } = this.props;\n\n        const charPhotos = {\n            \"yoda\": \"http://espn.go.com/prod/styles/pagetype/otl/20151218_starwars/img/soccer-20.png\",\n            \"Obi-wan Kenobi\": \"http://espn.go.com/prod/styles/pagetype/otl/20151218_starwars/img/soccer-26.png\",\n            \"R2-D2\": \"http://espn.go.com/prod/styles/pagetype/otl/20151218_starwars/img/baseball-10.png\",\n            \"Darth Vader\": \"http://espn.go.com/prod/styles/pagetype/otl/20151218_starwars/img/baseball-30.png\",\n            \"Luke Skywalker\": \"http://espn.go.com/prod/styles/pagetype/otl/20151218_starwars/img/cricket-14.png\"\n        };\n\n        const charDet = chars.map(char => {\n            return <li\n                className=\"char-list-item\"\n                key={ char.name }\n                onClick={ () => this.handleItemClick(char.url, char.name) }>\n                { char.name }\n            </li>\n        })\n        \n        return (\n            <div className=\"menu-container\">\n                <div className=\"menu\">\n                    <img src={currChar ? charPhotos[currChar] : charPhotos[\"yoda\"]} alt={`char-${currChar}`} />\n                    <div className=\"char-select\"\n                        onClick={() => toggleOpen(null) }>Select a character you will &nbsp;\n                        <i className={ open ? \"fas fa-angle-down\" : \"fas fa-angle-right\"}></i>\n                    </div>\n                </div>\n                <div className={open ? null : \"char-list-hidden\"}>\n                    <ul id=\"char-menu\" className=\"char-list\">\n                        {charDet}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default CharMenu;","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nexport default (props) => {\n\n    const { movie, show } = props;\n    const date = new Date(`${movie.release_date} 00:00`);\n    const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const formattedDate = `${weekDays[date.getDay() - 1]}, ${months[date.getMonth()]} ${date.getDate()} ${date.getFullYear()}`;\n    const moviePosters = [\n        \"https://m.media-amazon.com/images/M/MV5BYTRhNjcwNWQtMGJmMi00NmQyLWE2YzItODVmMTdjNWI0ZDA2XkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UY1200_CR85,0,630,1200_AL_.jpg\",\n        \"https://m.media-amazon.com/images/M/MV5BMDAzM2M0Y2UtZjRmZi00MzVlLTg4MjEtOTE3NzU5ZDVlMTU5XkEyXkFqcGdeQXVyNDUyOTg3Njg@._V1_SY999_CR0,0,659,999_AL_.jpg\",\n        \"https://m.media-amazon.com/images/M/MV5BNTc4MTc3NTQ5OF5BMl5BanBnXkFtZTcwOTg0NjI4NA@@._V1_UY1200_CR135,0,630,1200_AL_.jpg\",\n        \"https://m.media-amazon.com/images/M/MV5BNzVlY2MwMjktM2E4OS00Y2Y3LWE3ZjctYzhkZGM3YzA1ZWM2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_UY1200_CR71,0,630,1200_AL_.jpg\",\n        \"https://m.media-amazon.com/images/M/MV5BYmU1NDRjNDgtMzhiMi00NjZmLTg5NGItZDNiZjU5NTU4OTE0XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_UY1200_CR70,0,630,1200_AL_.jpg\",\n        \"https://m.media-amazon.com/images/M/MV5BOWZlMjFiYzgtMTUzNC00Y2IzLTk1NTMtZmNhMTczNTk0ODk1XkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UY1200_CR72,0,630,1200_AL_.jpg\",\n        \"https://m.media-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_UY1200_CR91,0,630,1200_AL_.jpg\"\n    ];\n    \n    return (\n        <Transition timeout={4000} in={ !show } exit={ true } appear>\n            {(status) => (\n                    <li className={`movie-list-item movie-list-item-${status}`} key={movie.title}>\n                        <img src={moviePosters[movie.episode_id - 1]} alt=\"movie-poster\"/>\n                        <div className=\"movie-info\">\n                            <h2>{movie.title}</h2>\n                            <h3><strong>Directed by:</strong> {movie.director}</h3>\n                            <p>{movie.opening_crawl}</p> \n                            <p><strong>Release Date:</strong> {formattedDate}</p> \n                        </div>\n                    </li>\n            )}\n        </Transition>\n    );\n}","import React from 'react';\nimport MovieListItem from './MovieListItem';\n\nexport default (props) => {\n    const { movies, currChar, movieItemShow } = props;\n\n    const movieList = movies.map(movie => {\n        return <MovieListItem key={ movie.title } movie={ movie } show={ movieItemShow } />\n    });\n\n    \n    return (\n        <div className=\"movie-section\">\n            <h1>{ currChar ? `${currChar} appeared in the following films:` : \" \" }</h1> \n            <ul className=\"movie-list\">\n                {movieList}\n            </ul>\n        </div>\n        \n    );\n}","import React from 'react';\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport MovieList from './components/MovieList';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movieItemShow: false,\n      dropDownOpen: false, // keeps track of the status of the drop down menu\n      currChar: null, // keeps track of which character is currently selected\n      currMovies: null, // keeps track of the movies in which the currChar was featured in\n      characters: [{   // the data \n        \"name\": \"Luke Skywalker\",\n        \"url\": \"https://swapi.co/api/people/1/\"\n      }, {\n        \"name\": \"Darth Vader\",\n        \"url\": \"https://swapi.co/api/people/4/\"\n      }, {\n        \"name\": \"Obi-wan Kenobi\",\n        \"url\": \"https://swapi.co/api/people/10/\"\n      }, {\n        \"name\": \"R2-D2\",\n        \"url\": \"https://swapi.co/api/people/3/\"\n      }]\n    }\n\n  }\n\n  // Passed down as a prop to the character menu, and will fetch the movies for a particular character. Once all\n  // promises have resolved, it will set currMovies state to an array of relevant movies.\n\n  addMovies = async (data) => {\n\n    let promises = data.films.map(film => {\n        let response = fetch(film).then(data => data.json());\n        return response;\n    });\n\n    const films = await Promise.all(promises)\n\n    this.setState({\n      currMovies: films\n    });\n  }\n\n  // Toggles the state of the drop down menu, between open: true and open: false\n\n  toggleOpen = (charName) => {\n    this.setState({\n      movieItemShow: !this.state.movieItemShow,\n      dropDownOpen: !this.state.dropDownOpen,\n      currChar: charName,\n      // currMovies: []\n    })\n  }\n  \n  // Renders the following:\n  // App\n  //   Header\n  //   MainContent\n  //     Menu\n  //     MovieList\n\n  render () {\n    \n    const { dropDownOpen, characters, currMovies, currChar, movieItemShow } = this.state;\n    \n    return (  <div className=\"App\">\n                <Header />\n                <section className=\"main-content\">\n                  <Menu addMovies={ this.addMovies } \n                        open={ dropDownOpen } \n                        chars={ characters }\n                        toggleOpen = { this.toggleOpen }\n                        currChar={ currChar }\n                        />\n                  <MovieList movieItemShow={ movieItemShow } currChar={ currChar } movies={ currMovies ? currMovies : [] } />\n                </section>\n              </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/reset.css';\nimport './style/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}